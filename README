A (work in progress) implementation of the forth programming language written
in Rust.

Project goals:
	To write a forth implementation that follows the forth standard
	(https://forth-standard.org/) and implements the core words.

	To practice rust and forth

	To have fun

License:
	This project is distributed under GPLv3+, read the "COPYING" file
	for more details.

Project structure:
	src -> rust source code
	examples -> example forth code

Building:
	cargo build
	cargo run

Implemented words:
	Core:
		2dup
		2drop
		?dup
		+!
		/
		space
		cr
		c,
		,
		bl
		decimal
		0=
		0<
		1-
		1+
		.s
		bye
		words
		dup
		drop
		.
		swap
		over
		nip
		rot
		min
		max
		abs
		/mod
		*/
		*/mod
		here
		allot
		@
		!
		c@
		c!
		emit
		base
		+
		-
		*
		and
		or
		xor
		mod
		lshift
		rshift
		negate
		invert
		=
		<
		>
		:
		cells
		r>
		>r
		r@
		fill
		u.
		u<
		move
		cell+
		depth
		quit
		>in
		state
		source
		true
		false
		immediate
		;
		if
		else
		then
		begin
		until
		while
		repeat
		exit
		literal
		create
		variable
		constant
		align
		aligned
		postpone
		char+
		chars
	Extra:
		dump

Core words to implement:
	do
	loop
	unloop
	+loop
	i
	j
	leave

	word

	abort
	abort"

	char
	(
	."
	s"
	
	'
	find
	execute
	>body
	
	[
	]
	[char]
	[']
	
	recurse
	
	does>

	evaluate
	
	spaces
	type
	
	2!
	2*
	2/
	2@
	2over
	2swap
	s>d
	
	fm/mod
	sm/rem
	um*
	um/mod
	m*
	
	#
	#>
	#s
	<#
	hold
	sign
	
	key
	accept

	>number

	count

	environment?
